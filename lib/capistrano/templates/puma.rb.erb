#!/usr/bin/env puma

directory '<%= current_path %>'
rackup "<%=fetch(:puma_rackup)%>"
environment '<%= fetch(:puma_env) %>'
<% if fetch(:puma_tag) %>
  tag '<%= fetch(:puma_tag)%>'
<% end %>
pidfile "<%=fetch(:puma_pid)%>"
state_path "<%=fetch(:puma_state)%>"
stdout_redirect '<%=fetch(:puma_access_log)%>', '<%=fetch(:puma_error_log)%>', true


threads <%=fetch(:puma_threads).join(',')%>

<%= puma_bind %>
workers <%= puma_workers %>
<% if fetch(:puma_worker_timeout) %>
worker_timeout <%= fetch(:puma_worker_timeout).to_i %>
<% end %>

<% if fetch(:puma_preload_app) %>
preload_app!
<% end %>

<% if fetch(:puma_prune_bundler) %>
prune_bundler
<% end %>

<% if fetch(:puma_init_active_record) || fetch(:puma_worker_set)  %>
on_worker_boot do
  <% if fetch(:puma_workers).to_i > 1 %>
  File.open("<%=fetch(:puma_worker_set)%>/puma_worker_#{worker_index}.pid", "w") { |f| f.puts Process.pid }
  <% end %>
  ActiveSupport.on_load(:active_record) do
    ActiveRecord::Base.establish_connection
  end
end
<% end %>
